{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  mode: 'light',\n  // user: null,\n  user: 'John',\n  token: null,\n  posts: []\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setMode: state => {\n      state.mode = state.mode === 'light' ? 'dark' : 'light';\n    },\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.token = null;\n    },\n    setFriends: (state, action) => {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.log('User friends non-existent');\n      }\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload.posts;\n    },\n    setPost: (state, action) => {\n      const updatedPosts = state.posts.map(post => {\n        if (post._id === action.payload.post_id) return action.payload.post;\n        return post;\n      });\n      state.posts = updatedPosts;\n    }\n  }\n});\nexport const {\n  setMode,\n  setLogin,\n  setLogout,\n  setFriends,\n  setPosts,\n  setPost\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","token","posts","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setFriends","friends","console","log","setPosts","setPost","updatedPosts","map","post","_id","post_id","actions","reducer"],"sources":["/Users/shahbaz/Coding/Portfolio/social-media-app/client/src/state/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n\tmode: 'light',\n\t// user: null,\n\tuser: 'John',\n\ttoken: null,\n\tposts: [],\n};\n\nexport const authSlice = createSlice({\n\tname: 'auth',\n\tinitialState,\n\treducers: {\n\t\tsetMode: (state) => {\n\t\t\tstate.mode = state.mode === 'light' ? 'dark' : 'light';\n\t\t},\n\t\tsetLogin: (state, action) => {\n\t\t\tstate.user = action.payload.user;\n\t\t\tstate.token = action.payload.token;\n\t\t},\n\t\tsetLogout: (state) => {\n\t\t\tstate.user = null;\n\t\t\tstate.token = null;\n\t\t},\n\t\tsetFriends: (state, action) => {\n\t\t\tif (state.user) {\n\t\t\t\tstate.user.friends = action.payload.friends;\n\t\t\t} else {\n\t\t\t\tconsole.log('User friends non-existent');\n\t\t\t}\n\t\t},\n\t\tsetPosts: (state, action) => {\n\t\t\tstate.posts = action.payload.posts;\n\t\t},\n\t\tsetPost: (state, action) => {\n\t\t\tconst updatedPosts = state.posts.map((post) => {\n\t\t\t\tif (post._id === action.payload.post_id) return action.payload.post;\n\t\t\t\treturn post;\n\t\t\t});\n\t\t\tstate.posts = updatedPosts;\n\t\t},\n\t},\n});\n\nexport const { setMode, setLogin, setLogout, setFriends, setPosts, setPost } =\n\tauthSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACpBC,IAAI,EAAE,OAAO;EACb;EACAC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACTC,OAAO,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACR,IAAI,GAAGQ,KAAK,CAACR,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACvD,CAAC;IACDS,QAAQ,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC5BF,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAChCO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACnC,CAAC;IACDU,SAAS,EAAGJ,KAAK,IAAK;MACrBA,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACnB,CAAC;IACDW,UAAU,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC9B,IAAIF,KAAK,CAACP,IAAI,EAAE;QACfO,KAAK,CAACP,IAAI,CAACa,OAAO,GAAGJ,MAAM,CAACC,OAAO,CAACG,OAAO;MAC5C,CAAC,MAAM;QACNC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACzC;IACD,CAAC;IACDC,QAAQ,EAAEA,CAACT,KAAK,EAAEE,MAAM,KAAK;MAC5BF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK;IACnC,CAAC;IACDe,OAAO,EAAEA,CAACV,KAAK,EAAEE,MAAM,KAAK;MAC3B,MAAMS,YAAY,GAAGX,KAAK,CAACL,KAAK,CAACiB,GAAG,CAAEC,IAAI,IAAK;QAC9C,IAAIA,IAAI,CAACC,GAAG,KAAKZ,MAAM,CAACC,OAAO,CAACY,OAAO,EAAE,OAAOb,MAAM,CAACC,OAAO,CAACU,IAAI;QACnE,OAAOA,IAAI;MACZ,CAAC,CAAC;MACFb,KAAK,CAACL,KAAK,GAAGgB,YAAY;IAC3B;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEZ,OAAO;EAAEE,QAAQ;EAAEG,SAAS;EAAEC,UAAU;EAAEI,QAAQ;EAAEC;AAAQ,CAAC,GAC3Ed,SAAS,CAACoB,OAAO;AAElB,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}